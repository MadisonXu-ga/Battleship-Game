/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package edu.duke.rx50.battleship;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;

import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.PrintStream;
import java.io.StringReader;

import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.parallel.ResourceAccessMode;
import org.junit.jupiter.api.parallel.ResourceLock;
import org.junit.jupiter.api.parallel.Resources;

class AppTest {
  // @ResourceLock to ensure proper serialization of the tests.
  // @Disabled
  @Test
  @ResourceLock(value = Resources.SYSTEM_OUT, mode = ResourceAccessMode.READ_WRITE)
  void test_main() throws IOException {
    // test_helper("input.txt", "output.txt");
    // test_helper("input_A_win.txt", "output_A_win.txt");
    // test_helper("input_v2_ship.txt", "output_v2_ship.txt");
    // test_helper("input_v2_ship2.txt", "output_v2_ship2.txt");
    test_helper("input_new_move.txt", "output_new_move.txt");
    test_helper("input_cVSc.txt", "output_cVSc.txt");
    test_helper("input_cVSh.txt", "output_cVSh.txt");
    test_helper("input_error_case.txt", "output_error_case.txt");
  }

  void test_helper(String inputFile, String outputFile) throws IOException {
    ByteArrayOutputStream bytes = new ByteArrayOutputStream();
    PrintStream out = new PrintStream(bytes, true);
    // get an InputStream for our input.txt file:
    InputStream input = getClass().getClassLoader().getResourceAsStream(inputFile);

    assertNotNull(input);
    // ask the ClassLaoder to find us a resource named "input.txt" and give us back
    // an InputStream for it.
    InputStream expectedStream = getClass().getClassLoader().getResourceAsStream(outputFile);
    assertNotNull(expectedStream);
    // remember the current System.in and System.out:
    InputStream oldIn = System.in;
    PrintStream oldOut = System.out;

    // change to our new input (from "input.txt") and output (our PrintStream that
    // write
    // into bytes), and run our App.main.
    try {
      System.setIn(input);
      System.setOut(out);
      App.main(new String[0]);
    } finally {
      System.setIn(oldIn);
      System.setOut(oldOut);
    }

    // Last we just need to read all the data from our expectedStream (output.txt):
    String expected = new String(expectedStream.readAllBytes());
    // Then we get the String out of bytes:
    String actual = bytes.toString();
    // And finally compare them:
    assertEquals(expected, actual);
  }
}
